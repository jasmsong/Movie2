var search_data = {"index":{"searchIndex":["moviedata","load_data()","most_similar()","movies()","new()","popularity()","popularity_list()","predict()","rating()","run_test()","set_reviews()","similarity()","update_movie_reviews()","update_movie_user_reviews()","update_test_movie_user_reviews()","update_user_reviews()","viewers()"],"longSearchIndex":["moviedata","moviedata#load_data()","moviedata#most_similar()","moviedata#movies()","moviedata::new()","moviedata#popularity()","moviedata#popularity_list()","moviedata#predict()","moviedata#rating()","moviedata#run_test()","moviedata#set_reviews()","moviedata#similarity()","moviedata#update_movie_reviews()","moviedata#update_movie_user_reviews()","moviedata#update_test_movie_user_reviews()","moviedata#update_user_reviews()","moviedata#viewers()"],"info":[["MovieData","","MovieData.html","","<p>This class represents MovieData with a lot of methods\n"],["load_data","MovieData","MovieData.html#method-i-load_data","(folder)","<p>load data from u.data, only create training set\n"],["most_similar","MovieData","MovieData.html#method-i-most_similar","(user1)","<p>return the list of similarity of all other users with a user\n"],["movies","MovieData","MovieData.html#method-i-movies","(u)","<p>return the list of movies the user have watched\n"],["new","MovieData","MovieData.html#method-c-new","(folder)","<p>constructor with folder using the u.data file in this folder\n"],["popularity","MovieData","MovieData.html#method-i-popularity","(movie_id)","<p>return the popularity of the movie equal the number of people who have\nwatched the movie\n"],["popularity_list","MovieData","MovieData.html#method-i-popularity_list","()","<p>return the popularity of all movies\n"],["predict","MovieData","MovieData.html#method-i-predict","(u, m)","<p>predict the rating of the user and movie\n"],["rating","MovieData","MovieData.html#method-i-rating","(u, m)","<p>return the rating of the user and movie\n"],["run_test","MovieData","MovieData.html#method-i-run_test","(k)","<p>run predict for the first k rating\n"],["set_reviews","MovieData","MovieData.html#method-i-set_reviews","()","<p>initialize the instance variable\n"],["similarity","MovieData","MovieData.html#method-i-similarity","(user1, user2)","<p>return the similarity of two users\n"],["update_movie_reviews","MovieData","MovieData.html#method-i-update_movie_reviews","(readin)","<p>create a hash with movie id as key, and value is also a hash with user id\nas key\n"],["update_movie_user_reviews","MovieData","MovieData.html#method-i-update_movie_user_reviews","(readin)","<p>create a hash with movie id and user id as key, storing training data set\n"],["update_test_movie_user_reviews","MovieData","MovieData.html#method-i-update_test_movie_user_reviews","(readin)","<p>create a hash with movie id and user id as key, storing test data set\n"],["update_user_reviews","MovieData","MovieData.html#method-i-update_user_reviews","(readin)","<p>create a hash with user id as key, and value is also a hash with movie id\nas key\n"],["viewers","MovieData","MovieData.html#method-i-viewers","(w)","<p>return the list of users that have watched movie\n"]]}}